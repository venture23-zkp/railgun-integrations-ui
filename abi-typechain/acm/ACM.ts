// /* Autogenerated file. Do not edit manually. */
// /* tslint:disable */
// /* eslint-disable */
// import type {
//     BaseContract,
//     BigNumber,
//     BigNumberish,
//     BytesLike,
//     CallOverrides,
//     ContractTransaction,
//     Overrides,
//     PopulatedTransaction,
//     Signer,
//     utils,
//   } from "ethers";
//   import type {
//     FunctionFragment,
//     Result,
//     EventFragment,
//   } from "@ethersproject/abi";
//   import type { Listener, Provider } from "@ethersproject/providers";
//   import type {
//     TypedEventFilter,
//     TypedEvent,
//     TypedListener,
//     OnEvent,
//     PromiseOrValue,
//   } from "../../common";

//   export interface AddressContractManagerInterface extends utils.Interface {
//     functions: {
//       "aavePool()": FunctionFragment;
//       "approve(address,uint256)": FunctionFragment;
//       "balanceOf(address)": FunctionFragment;
//       "borrow(uint256,address,uint256,uint256)": FunctionFragment;
//       "deposit(uint256,address,uint256)": FunctionFragment;
//       "getApproved(uint256)": FunctionFragment;
//       "isApprovedForAll(address,address)": FunctionFragment;
//       "name()": FunctionFragment;
//       "nftAc(uint256)": FunctionFragment;
//       "ownerOf(uint256)": FunctionFragment;
//       "relay()": FunctionFragment;
//       "repay(uint256,address,uint256,uint256)": FunctionFragment;
//       "safeTransferFrom(address,address,uint256)": FunctionFragment;
//       "safeTransferFrom(address,address,uint256,bytes)": FunctionFragment;
//       "setApprovalForAll(address,bool)": FunctionFragment;
//       "setupAC(uint256)": FunctionFragment;
//       "supportsInterface(bytes4)": FunctionFragment;
//       "symbol()": FunctionFragment;
//       "tokenURI(uint256)": FunctionFragment;
//       "transferFrom(address,address,uint256)": FunctionFragment;
//       "withdraw(uint256,address,uint256)": FunctionFragment;
//     };

//     getFunction(
//       nameOrSignatureOrTopic:
//         | "aavePool"
//         | "approve"
//         | "balanceOf"
//         | "borrow"
//         | "deposit"
//         | "getApproved"
//         | "isApprovedForAll"
//         | "name"
//         | "nftAc"
//         | "ownerOf"
//         | "relay"
//         | "repay"
//         | "safeTransferFrom(address,address,uint256)"
//         | "safeTransferFrom(address,address,uint256,bytes)"
//         | "setApprovalForAll"
//         | "setupAC"
//         | "supportsInterface"
//         | "symbol"
//         | "tokenURI"
//         | "transferFrom"
//         | "withdraw"
//     ): FunctionFragment;

//     encodeFunctionData(functionFragment: "aavePool", values?: undefined): string;
//     encodeFunctionData(
//       functionFragment: "approve",
//       values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "balanceOf",
//       values: [PromiseOrValue<string>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "borrow",
//       values: [
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<BigNumberish>
//       ]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "deposit",
//       values: [
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>
//       ]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "getApproved",
//       values: [PromiseOrValue<BigNumberish>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "isApprovedForAll",
//       values: [PromiseOrValue<string>, PromiseOrValue<string>]
//     ): string;
//     encodeFunctionData(functionFragment: "name", values?: undefined): string;
//     encodeFunctionData(
//       functionFragment: "nftAc",
//       values: [PromiseOrValue<BigNumberish>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "ownerOf",
//       values: [PromiseOrValue<BigNumberish>]
//     ): string;
//     encodeFunctionData(functionFragment: "relay", values?: undefined): string;
//     encodeFunctionData(
//       functionFragment: "repay",
//       values: [
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<BigNumberish>
//       ]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "safeTransferFrom(address,address,uint256)",
//       values: [
//         PromiseOrValue<string>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>
//       ]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
//       values: [
//         PromiseOrValue<string>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<BytesLike>
//       ]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "setApprovalForAll",
//       values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "setupAC",
//       values: [PromiseOrValue<BigNumberish>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "supportsInterface",
//       values: [PromiseOrValue<BytesLike>]
//     ): string;
//     encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
//     encodeFunctionData(
//       functionFragment: "tokenURI",
//       values: [PromiseOrValue<BigNumberish>]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "transferFrom",
//       values: [
//         PromiseOrValue<string>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>
//       ]
//     ): string;
//     encodeFunctionData(
//       functionFragment: "withdraw",
//       values: [
//         PromiseOrValue<BigNumberish>,
//         PromiseOrValue<string>,
//         PromiseOrValue<BigNumberish>
//       ]
//     ): string;

//     decodeFunctionResult(functionFragment: "aavePool", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "borrow", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
//     decodeFunctionResult(
//       functionFragment: "getApproved",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(
//       functionFragment: "isApprovedForAll",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "nftAc", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "relay", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "repay", data: BytesLike): Result;
//     decodeFunctionResult(
//       functionFragment: "safeTransferFrom(address,address,uint256)",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(
//       functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(
//       functionFragment: "setApprovalForAll",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(functionFragment: "setupAC", data: BytesLike): Result;
//     decodeFunctionResult(
//       functionFragment: "supportsInterface",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
//     decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
//     decodeFunctionResult(
//       functionFragment: "transferFrom",
//       data: BytesLike
//     ): Result;
//     decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;

//     events: {
//       "Approval(address,address,uint256)": EventFragment;
//       "ApprovalForAll(address,address,bool)": EventFragment;
//       "Transfer(address,address,uint256)": EventFragment;
//       "contractCreated(address,uint256)": EventFragment;
//     };

//     getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
//     getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
//     getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
//     getEvent(nameOrSignatureOrTopic: "contractCreated"): EventFragment;
//   }

//   export interface ApprovalEventObject {
//     owner: string;
//     approved: string;
//     tokenId: BigNumber;
//   }
//   export type ApprovalEvent = TypedEvent<
//     [string, string, BigNumber],
//     ApprovalEventObject
//   >;

//   export type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;

//   export interface ApprovalForAllEventObject {
//     owner: string;
//     operator: string;
//     approved: boolean;
//   }
//   export type ApprovalForAllEvent = TypedEvent<
//     [string, string, boolean],
//     ApprovalForAllEventObject
//   >;

//   export type ApprovalForAllEventFilter = TypedEventFilter<ApprovalForAllEvent>;

//   export interface TransferEventObject {
//     from: string;
//     to: string;
//     tokenId: BigNumber;
//   }
//   export type TransferEvent = TypedEvent<
//     [string, string, BigNumber],
//     TransferEventObject
//   >;

//   export type TransferEventFilter = TypedEventFilter<TransferEvent>;

//   export interface contractCreatedEventObject {
//     ac: string;
//     id: BigNumber;
//   }
//   export type contractCreatedEvent = TypedEvent<
//     [string, BigNumber],
//     contractCreatedEventObject
//   >;

//   export type contractCreatedEventFilter = TypedEventFilter<contractCreatedEvent>;

//   export interface AddressContractManager extends BaseContract {
//     connect(signerOrProvider: Signer | Provider | string): this;
//     attach(addressOrName: string): this;
//     deployed(): Promise<this>;

//     interface: AddressContractManagerInterface;

//     queryFilter<TEvent extends TypedEvent>(
//       event: TypedEventFilter<TEvent>,
//       fromBlockOrBlockhash?: string | number | undefined,
//       toBlock?: string | number | undefined
//     ): Promise<Array<TEvent>>;

//     listeners<TEvent extends TypedEvent>(
//       eventFilter?: TypedEventFilter<TEvent>
//     ): Array<TypedListener<TEvent>>;
//     listeners(eventName?: string): Array<Listener>;
//     removeAllListeners<TEvent extends TypedEvent>(
//       eventFilter: TypedEventFilter<TEvent>
//     ): this;
//     removeAllListeners(eventName?: string): this;
//     off: OnEvent<this>;
//     on: OnEvent<this>;
//     once: OnEvent<this>;
//     removeListener: OnEvent<this>;

//     functions: {
//       aavePool(overrides?: CallOverrides): Promise<[string]>;

//       approve(
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       balanceOf(
//         owner: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<[BigNumber]>;

//       borrow(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       deposit(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       getApproved(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<[string]>;

//       isApprovedForAll(
//         owner: PromiseOrValue<string>,
//         operator: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<[boolean]>;

//       name(overrides?: CallOverrides): Promise<[string]>;

//       nftAc(
//         arg0: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<[string]>;

//       ownerOf(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<[string]>;

//       relay(overrides?: CallOverrides): Promise<[string]>;

//       repay(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       "safeTransferFrom(address,address,uint256)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       "safeTransferFrom(address,address,uint256,bytes)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         data: PromiseOrValue<BytesLike>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       setApprovalForAll(
//         operator: PromiseOrValue<string>,
//         approved: PromiseOrValue<boolean>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       setupAC(
//         _id: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       supportsInterface(
//         interfaceId: PromiseOrValue<BytesLike>,
//         overrides?: CallOverrides
//       ): Promise<[boolean]>;

//       symbol(overrides?: CallOverrides): Promise<[string]>;

//       tokenURI(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<[string]>;

//       transferFrom(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;

//       withdraw(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<ContractTransaction>;
//     };

//     aavePool(overrides?: CallOverrides): Promise<string>;

//     approve(
//       to: PromiseOrValue<string>,
//       tokenId: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     balanceOf(
//       owner: PromiseOrValue<string>,
//       overrides?: CallOverrides
//     ): Promise<BigNumber>;

//     borrow(
//       _id: PromiseOrValue<BigNumberish>,
//       _token: PromiseOrValue<string>,
//       _amount: PromiseOrValue<BigNumberish>,
//       _rateMode: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     deposit(
//       _id: PromiseOrValue<BigNumberish>,
//       _token: PromiseOrValue<string>,
//       _amount: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     getApproved(
//       tokenId: PromiseOrValue<BigNumberish>,
//       overrides?: CallOverrides
//     ): Promise<string>;

//     isApprovedForAll(
//       owner: PromiseOrValue<string>,
//       operator: PromiseOrValue<string>,
//       overrides?: CallOverrides
//     ): Promise<boolean>;

//     name(overrides?: CallOverrides): Promise<string>;

//     nftAc(
//       arg0: PromiseOrValue<BigNumberish>,
//       overrides?: CallOverrides
//     ): Promise<string>;

//     ownerOf(
//       tokenId: PromiseOrValue<BigNumberish>,
//       overrides?: CallOverrides
//     ): Promise<string>;

//     relay(overrides?: CallOverrides): Promise<string>;

//     repay(
//       _id: PromiseOrValue<BigNumberish>,
//       _token: PromiseOrValue<string>,
//       _amount: PromiseOrValue<BigNumberish>,
//       _rateMode: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     "safeTransferFrom(address,address,uint256)"(
//       from: PromiseOrValue<string>,
//       to: PromiseOrValue<string>,
//       tokenId: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     "safeTransferFrom(address,address,uint256,bytes)"(
//       from: PromiseOrValue<string>,
//       to: PromiseOrValue<string>,
//       tokenId: PromiseOrValue<BigNumberish>,
//       data: PromiseOrValue<BytesLike>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     setApprovalForAll(
//       operator: PromiseOrValue<string>,
//       approved: PromiseOrValue<boolean>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     setupAC(
//       _id: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     supportsInterface(
//       interfaceId: PromiseOrValue<BytesLike>,
//       overrides?: CallOverrides
//     ): Promise<boolean>;

//     symbol(overrides?: CallOverrides): Promise<string>;

//     tokenURI(
//       tokenId: PromiseOrValue<BigNumberish>,
//       overrides?: CallOverrides
//     ): Promise<string>;

//     transferFrom(
//       from: PromiseOrValue<string>,
//       to: PromiseOrValue<string>,
//       tokenId: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     withdraw(
//       _id: PromiseOrValue<BigNumberish>,
//       _token: PromiseOrValue<string>,
//       _amount: PromiseOrValue<BigNumberish>,
//       overrides?: Overrides & { from?: PromiseOrValue<string> }
//     ): Promise<ContractTransaction>;

//     callStatic: {
//       aavePool(overrides?: CallOverrides): Promise<string>;

//       approve(
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       balanceOf(
//         owner: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       borrow(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       deposit(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       getApproved(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<string>;

//       isApprovedForAll(
//         owner: PromiseOrValue<string>,
//         operator: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<boolean>;

//       name(overrides?: CallOverrides): Promise<string>;

//       nftAc(
//         arg0: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<string>;

//       ownerOf(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<string>;

//       relay(overrides?: CallOverrides): Promise<string>;

//       repay(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       "safeTransferFrom(address,address,uint256)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       "safeTransferFrom(address,address,uint256,bytes)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         data: PromiseOrValue<BytesLike>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       setApprovalForAll(
//         operator: PromiseOrValue<string>,
//         approved: PromiseOrValue<boolean>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       setupAC(
//         _id: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       supportsInterface(
//         interfaceId: PromiseOrValue<BytesLike>,
//         overrides?: CallOverrides
//       ): Promise<boolean>;

//       symbol(overrides?: CallOverrides): Promise<string>;

//       tokenURI(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<string>;

//       transferFrom(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;

//       withdraw(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<void>;
//     };

//     filters: {
//       "Approval(address,address,uint256)"(
//         owner?: PromiseOrValue<string> | null,
//         approved?: PromiseOrValue<string> | null,
//         tokenId?: PromiseOrValue<BigNumberish> | null
//       ): ApprovalEventFilter;
//       Approval(
//         owner?: PromiseOrValue<string> | null,
//         approved?: PromiseOrValue<string> | null,
//         tokenId?: PromiseOrValue<BigNumberish> | null
//       ): ApprovalEventFilter;

//       "ApprovalForAll(address,address,bool)"(
//         owner?: PromiseOrValue<string> | null,
//         operator?: PromiseOrValue<string> | null,
//         approved?: null
//       ): ApprovalForAllEventFilter;
//       ApprovalForAll(
//         owner?: PromiseOrValue<string> | null,
//         operator?: PromiseOrValue<string> | null,
//         approved?: null
//       ): ApprovalForAllEventFilter;

//       "Transfer(address,address,uint256)"(
//         from?: PromiseOrValue<string> | null,
//         to?: PromiseOrValue<string> | null,
//         tokenId?: PromiseOrValue<BigNumberish> | null
//       ): TransferEventFilter;
//       Transfer(
//         from?: PromiseOrValue<string> | null,
//         to?: PromiseOrValue<string> | null,
//         tokenId?: PromiseOrValue<BigNumberish> | null
//       ): TransferEventFilter;

//       "contractCreated(address,uint256)"(
//         ac?: null,
//         id?: null
//       ): contractCreatedEventFilter;
//       contractCreated(ac?: null, id?: null): contractCreatedEventFilter;
//     };

//     estimateGas: {
//       aavePool(overrides?: CallOverrides): Promise<BigNumber>;

//       approve(
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       balanceOf(
//         owner: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       borrow(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       deposit(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       getApproved(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       isApprovedForAll(
//         owner: PromiseOrValue<string>,
//         operator: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       name(overrides?: CallOverrides): Promise<BigNumber>;

//       nftAc(
//         arg0: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       ownerOf(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       relay(overrides?: CallOverrides): Promise<BigNumber>;

//       repay(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       "safeTransferFrom(address,address,uint256)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       "safeTransferFrom(address,address,uint256,bytes)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         data: PromiseOrValue<BytesLike>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       setApprovalForAll(
//         operator: PromiseOrValue<string>,
//         approved: PromiseOrValue<boolean>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       setupAC(
//         _id: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       supportsInterface(
//         interfaceId: PromiseOrValue<BytesLike>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       symbol(overrides?: CallOverrides): Promise<BigNumber>;

//       tokenURI(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<BigNumber>;

//       transferFrom(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;

//       withdraw(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<BigNumber>;
//     };

//     populateTransaction: {
//       aavePool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

//       approve(
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       balanceOf(
//         owner: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       borrow(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       deposit(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       getApproved(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       isApprovedForAll(
//         owner: PromiseOrValue<string>,
//         operator: PromiseOrValue<string>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

//       nftAc(
//         arg0: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       ownerOf(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       relay(overrides?: CallOverrides): Promise<PopulatedTransaction>;

//       repay(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         _rateMode: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       "safeTransferFrom(address,address,uint256)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       "safeTransferFrom(address,address,uint256,bytes)"(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         data: PromiseOrValue<BytesLike>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       setApprovalForAll(
//         operator: PromiseOrValue<string>,
//         approved: PromiseOrValue<boolean>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       setupAC(
//         _id: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       supportsInterface(
//         interfaceId: PromiseOrValue<BytesLike>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

//       tokenURI(
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: CallOverrides
//       ): Promise<PopulatedTransaction>;

//       transferFrom(
//         from: PromiseOrValue<string>,
//         to: PromiseOrValue<string>,
//         tokenId: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;

//       withdraw(
//         _id: PromiseOrValue<BigNumberish>,
//         _token: PromiseOrValue<string>,
//         _amount: PromiseOrValue<BigNumberish>,
//         overrides?: Overrides & { from?: PromiseOrValue<string> }
//       ): Promise<PopulatedTransaction>;
//     };
//   }
export default () => {
  return;
};
